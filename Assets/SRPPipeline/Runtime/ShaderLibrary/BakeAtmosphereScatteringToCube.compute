// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#include "AtmosphereScattering.hlsl"
#include "BakeAtmosphereScatteringInclude.hlsl"


float3 _MainLightPosition;
float _MainLightIntensity;

Texture3D<float4> _SkyboxLUT;

half3 GetSkyColor(float3 viewDirWS, float3 sunDir)
{
    float w, h, d;
    _SkyboxLUT.GetDimensions(w, h, d);
    // Reverse it to point into the scene
    float3 rayStart = float3(0, 1, 0);
    float3 earthCenter = float3(0, -_EarthRadius, 0);
    float height = max(length(rayStart - earthCenter) - _EarthRadius, 0);
    float3 groundNormal = normalize(rayStart - earthCenter);
    float cosView = dot(groundNormal, viewDirWS);
    float cosSun = dot(groundNormal, -sunDir);

    float3 texCoords;
    texCoords.x = pow(height / _AtmosphereHeight, 0.5);
    float ch = -sqrt(height * (2 * _EarthRadius + height)) / (_EarthRadius + height);

    texCoords.y = cosView > ch ? (0.5 * pow((cosView - ch) / (1.0 - ch), 0.2) + 0.5)
        : (0.5 * pow((ch - cosView) / (1.0 + ch), 0.2));

    texCoords.z = 0.5 * ((atan(max(cosSun, -0.1975) * tan(1.26 * 1.1)) / 1.1) + (1 - 0.26));
    int3 texCoordsInt = int3(texCoords * float3(w, h, d));
    half4 scattering = _SkyboxLUT[texCoordsInt]; //tex3D(_SkyboxLUT, texCoords);
    //return scattering;
    //
    float cosTheta = dot(viewDirWS, -sunDir);
    half3 scatteringR = scattering.rgb * GetModifyRayleighPhase(cosTheta) * _BetaRayleigh / (4.0 * PI);
    half3 sM = scattering.rgb * scattering.w / scattering.r;
    half3 scatteringM = sM * GetHGMiePhase(cosTheta, _MieG) * _BetaMie / (4.0 * PI);
    half3 skyColor = (scatteringR + scatteringM) * _MainLightIntensity * _SunLightColor;
    return skyColor;
}

[numthreads(8,8,1)]
void CSMain(uint3 id : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID, uint3 groupId : SV_GroupID)
{
    // TODO: insert actual code here!
    float3 direction = GetDirection(id.xy, groupId.z);
    
    float3 sunDir = -normalize(_MainLightPosition.xyz);
    //calculate the incoming light from the atmosphere
    

    half3 skyColor = GetSkyColor(direction, sunDir);
    _Cubemap[uint3(id.xy, groupId.z)] = half4(skyColor, 1);

}
